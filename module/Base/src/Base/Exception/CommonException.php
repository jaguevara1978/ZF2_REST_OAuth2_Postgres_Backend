<?namespace Base\Exception;class CommonException extends \Exception implements ExceptionInterface {    protected $parameters;        public function __construct( $arrayParameters ) {        $this->setParameters( $arrayParameters );        if ( !array_key_exists( 'messageId', $arrayParameters ) ) {            $arrayParameters[ 'messageId' ] = 'globals.common.no_message_error';        }        if ( !array_key_exists( 'code', $arrayParameters ) ) {            $arrayParameters[ 'code' ] = 404;        }                parent::__construct( $arrayParameters[ 'messageId' ], $arrayParameters[ 'code' ] );    }        private function setParameters ( $array ) {        $this->parameters = $array;    }    public function getParmeters ( ) {        return $this->parameters;    }    public function getParameter ( $string ) {        if ( array_key_exists( $string, $this->parameters ) )            return $this->parameters[ $string ];        else return '';    }    public function getMessageId ( ) {        return $this->getParameter( 'messageId' );    }    public function getErrorKey ( ) {        return $this->getParameter( EXCEPTION_ERRORKEY );    }    public function setErrorKey ( $string ) {        $this->parameters[ EXCEPTION_ERRORKEY ] = $string;    }    public function getMessageParms ( ) {        return $this->getParameter( 'parms' );    }}?>